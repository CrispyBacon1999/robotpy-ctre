[build-system]
requires = [
    "robotpy-build>=2020.0.0,<2021.0.0",
    "robotpy-wpiutil>=2020.1.2.1,<2021.0.0"
]

[tool.robotpy-build]
base_package = "ctre"

# [tool.robotpy-build.wrappers."ctre_wpi".maven_lib_download]
# artifact_id = "wpiapi-cpp"
# group_id = "com.ctre.phoenix"
# repo_url = "http://devsite.ctr-electronics.com/maven/release"
# version = "5.17.4"
# libs = ["CTRE_Phoenix_WPI"]

# [tool.robotpy-build.wrappers."ctre_wpi"]
# name = "ctre_wpi"

# generate = [
#     # ctre/phoenix/motorcontrol
#     { WPI_MotorSafetyImplem = "ctre/phoenix/motorcontrol/WPI_MotorSafetyImplem.h" },

#     # ctre/phoenix/motorcontrol/can
#     { WPI_BaseMotorController = "ctre/phoenix/motorcontrol/can/WPI_BaseMotorController.h" },
#     { WPI_TalonFX = "ctre/phoenix/motorcontrol/can/WPI_TalonFX.h" },
#     { WPI_TalonSRX = "ctre/phoenix/motorcontrol/can/WPI_TalonSRX.h" },
#     { WPI_VictorSPX = "ctre/phoenix/motorcontrol/can/WPI_VictorSPX.h" },

#     # ctre/phoenix/tasking
#     { ButtonMonitor = "ctre/phoenix/tasking/ButtonMonitor.h" },
# ]

# generation_data = "gen"


[tool.robotpy-build.wrappers."ctre".maven_lib_download]
artifact_id = "api-cpp"
group_id = "com.ctre.phoenix"
repo_url = "http://devsite.ctr-electronics.com/maven/release"
version = "5.17.4"
libs = ["CTRE_Phoenix"]

[tool.robotpy-build.wrappers."ctre"]
name = "ctre"

generate = [
    # ctre
    { Phoenix = "ctre/Phoenix.h" },

    # ctre/phoenix
    { CANBusAddressable = "ctre/phoenix/CANBusAddressable.h" },
    { CANifier = "ctre/phoenix/CANifier.h" },
    { CTRLogger = "ctre/phoenix/CTRLogger.h" },
    { CustomParamConfiguration = "ctre/phoenix/CustomParamConfiguration.h" },
    { HsvToRgb = "ctre/phoenix/HsvToRgb.h" },
    { LinearInterpolation = "ctre/phoenix/LinearInterpolation.h" },
    { RCRadio3Ch = "ctre/phoenix/RCRadio3Ch.h" },
    { Stopwatch = "ctre/phoenix/Stopwatch.h" },
    { Utilities = "ctre/phoenix/Utilities.h" },

    # ctre/phoenix/motion
    { BufferedTrajectoryPointStream = "ctre/phoenix/motion/BufferedTrajectoryPointStream.h" },

    # ctre/phoenix/motorcontrol
    { DeviceCatalog = "ctre/phoenix/motorcontrol/DeviceCatalog.h" },
    { GroupMotorControllers = "ctre/phoenix/motorcontrol/GroupMotorControllers.h" },
    { IFollower = "ctre/phoenix/motorcontrol/IFollower.h" },
    { IMotorController = "ctre/phoenix/motorcontrol/IMotorController.h" },
    { IMotorControllerEnhanced = "ctre/phoenix/motorcontrol/IMotorControllerEnhanced.h" },
    { SensorCollection = "ctre/phoenix/motorcontrol/SensorCollection.h" },
    { TalonFXSensorCollection = "ctre/phoenix/motorcontrol/TalonFXSensorCollection.h" },

    # ctre/phoenix/motorcontrol/can
    { BaseMotorController = "ctre/phoenix/motorcontrol/can/BaseMotorController.h" },
    { BaseTalon = "ctre/phoenix/motorcontrol/can/BaseTalon.h" },
    { TalonFX = "ctre/phoenix/motorcontrol/can/TalonFX.h" },
    { TalonSRX = "ctre/phoenix/motorcontrol/can/TalonSRX.h" },
    { VictorSPX = "ctre/phoenix/motorcontrol/can/VictorSPX.h" },

    # ctre/phoenix/platform
    { PlatformSim = "ctre/phoenix/platform/PlatformSim.h" },

    # ctre/phoenix/platform/can
    { PlatformCAN = "ctre/phoenix/platform/can/PlatformCAN.h" },

    # ctre/phoenix/sensors
    { CANCoder = "ctre/phoenix/sensors/CANCoder.h" },
    { PigeonIMU = "ctre/phoenix/sensors/PigeonIMU.h" },

    # ctre/phoenix/signals
    { IInvertable = "ctre/phoenix/signals/IInvertable.h" },
    { IOutputSignal = "ctre/phoenix/signals/IOutputSignal.h" },
    { MovingAverage = "ctre/phoenix/signals/MovingAverage.h" },

    # ctre/phoenix/tasking
    { ILoopable = "ctre/phoenix/tasking/ILoopable.h" },
    { IProcessable = "ctre/phoenix/tasking/IProcessable.h" },

    # ctre/phoenix/tasking/Schedulers
    { ConcurrentScheduler = "ctre/phoenix/tasking/Schedulers/ConcurrentScheduler.h" },
    { SequentialScheduler = "ctre/phoenix/tasking/Schedulers/SequentialScheduler.h" },

    # ctre/phoenix/unmanaged
    { Unmanaged = "ctre/phoenix/unmanaged/Unmanaged.h" },
]

generation_data = "gen"

# [tool.robotpy-build.wrappers."ctre_cci".maven_lib_download]
# artifact_id = "cci"
# group_id = "com.ctre.phoenix"
# repo_url = "http://devsite.ctr-electronics.com/maven/release"
# version = "5.17.4"
# libs = ["CTRE_PhoenixCCI"]

# [tool.robotpy-build.wrappers."ctre_cci"]
# name = "ctre_cci"

# generate = [
#     # ctre/phoenix
#     { CANifierControlFrame = "ctre/phoenix/CANifierControlFrame.h" },
#     { CANifierFaults = "ctre/phoenix/CANifierFaults.h" },
#     { CANifierStatusFrame = "ctre/phoenix/CANifierStatusFrame.h" },
#     { CANifierStickyFaults = "ctre/phoenix/CANifierStickyFaults.h" },
#     { CANifierVelocityMeasPeriod = "ctre/phoenix/CANifierVelocityMeasPeriod.h" },
#     { autocache = "ctre/phoenix/autocache.h" },

#     # ctre/phoenix/cci
#     { BuffTrajPointStream_CCI = "ctre/phoenix/cci/BuffTrajPointStream_CCI.h" },
#     { CANCoder_CCI = "ctre/phoenix/cci/CANCoder_CCI.h" },
#     { CANifier_CCI = "ctre/phoenix/cci/CANifier_CCI.h" },
#     { Logger_CCI = "ctre/phoenix/cci/Logger_CCI.h" },
#     { MotController_CCI = "ctre/phoenix/cci/MotController_CCI.h" },
#     { PigeonIMU_CCI = "ctre/phoenix/cci/PigeonIMU_CCI.h" },
#     { PlatformCAN_CCI = "ctre/phoenix/cci/PlatformCAN_CCI.h" },
#     { Platform_CCI = "ctre/phoenix/cci/Platform_CCI.h" },
#     { Unmanaged_CCI = "ctre/phoenix/cci/Unmanaged_CCI.h" },

#     # ctre/phoenix/core
#     { GadgeteerUartClient = "ctre/phoenix/core/GadgeteerUartClient.h" },

#     # ctre/phoenix/jni
#     { com_ctre_phoenix_CANifierJNI = "ctre/phoenix/jni/com_ctre_phoenix_CANifierJNI.h" },
#     { com_ctre_phoenix_CTRLoggerJNI = "ctre/phoenix/jni/com_ctre_phoenix_CTRLoggerJNI.h" },
#     { com_ctre_phoenix_motion_BuffTrajPointStreamJNI = "ctre/phoenix/jni/com_ctre_phoenix_motion_BuffTrajPointStreamJNI.h" },
#     { com_ctre_phoenix_motorcontrol_can_MotControllerJNI = "ctre/phoenix/jni/com_ctre_phoenix_motorcontrol_can_MotControllerJNI.h" },
#     { com_ctre_phoenix_platform_PlatformJNI = "ctre/phoenix/jni/com_ctre_phoenix_platform_PlatformJNI.h" },
#     { com_ctre_phoenix_platform_can_PlatformCANJNI = "ctre/phoenix/jni/com_ctre_phoenix_platform_can_PlatformCANJNI.h" },
#     { com_ctre_phoenix_sensors_CANCoderJNI = "ctre/phoenix/jni/com_ctre_phoenix_sensors_CANCoderJNI.h" },
#     { com_ctre_phoenix_sensors_PigeonImuJNI = "ctre/phoenix/jni/com_ctre_phoenix_sensors_PigeonImuJNI.h" },
#     { com_ctre_phoenix_unmanaged_UnmanagedJNI = "ctre/phoenix/jni/com_ctre_phoenix_unmanaged_UnmanagedJNI.h" },

#     # ctre/phoenix/motion
#     { MotionProfileStatus = "ctre/phoenix/motion/MotionProfileStatus.h" },
#     { SetValueMotionProfile = "ctre/phoenix/motion/SetValueMotionProfile.h" },
#     { TrajectoryPoint = "ctre/phoenix/motion/TrajectoryPoint.h" },

#     # ctre/phoenix/motorcontrol
#     { ControlFrame = "ctre/phoenix/motorcontrol/ControlFrame.h" },
#     { ControlMode = "ctre/phoenix/motorcontrol/ControlMode.h" },
#     { DemandType = "ctre/phoenix/motorcontrol/DemandType.h" },
#     { Faults = "ctre/phoenix/motorcontrol/Faults.h" },
#     { FeedbackDevice = "ctre/phoenix/motorcontrol/FeedbackDevice.h" },
#     { FollowerType = "ctre/phoenix/motorcontrol/FollowerType.h" },
#     { InvertType = "ctre/phoenix/motorcontrol/InvertType.h" },
#     { LimitSwitchType = "ctre/phoenix/motorcontrol/LimitSwitchType.h" },
#     { MotorCommutation = "ctre/phoenix/motorcontrol/MotorCommutation.h" },
#     { NeutralMode = "ctre/phoenix/motorcontrol/NeutralMode.h" },
#     { RemoteSensorSource = "ctre/phoenix/motorcontrol/RemoteSensorSource.h" },
#     { SensorTerm = "ctre/phoenix/motorcontrol/SensorTerm.h" },
#     { StatorCurrentLimitConfiguration = "ctre/phoenix/motorcontrol/StatorCurrentLimitConfiguration.h" },
#     { StatusFrame = "ctre/phoenix/motorcontrol/StatusFrame.h" },
#     { StickyFaults = "ctre/phoenix/motorcontrol/StickyFaults.h" },
#     { SupplyCurrentLimitConfiguration = "ctre/phoenix/motorcontrol/SupplyCurrentLimitConfiguration.h" },
#     { VelocityMeasPeriod = "ctre/phoenix/motorcontrol/VelocityMeasPeriod.h" },

#     # ctre/phoenix
#     { paramEnum = "ctre/phoenix/paramEnum.h" },

#     # ctre/phoenix/sensors
#     { AbsoluteSensorRange = "ctre/phoenix/sensors/AbsoluteSensorRange.h" },
#     { CANCoderFaults = "ctre/phoenix/sensors/CANCoderFaults.h" },
#     { CANCoderStatusFrame = "ctre/phoenix/sensors/CANCoderStatusFrame.h" },
#     { CANCoderStickyFaults = "ctre/phoenix/sensors/CANCoderStickyFaults.h" },
#     { MagnetFieldStrength = "ctre/phoenix/sensors/MagnetFieldStrength.h" },
#     { PigeonIMU_ControlFrame = "ctre/phoenix/sensors/PigeonIMU_ControlFrame.h" },
#     { PigeonIMU_Faults = "ctre/phoenix/sensors/PigeonIMU_Faults.h" },
#     { PigeonIMU_StatusFrame = "ctre/phoenix/sensors/PigeonIMU_StatusFrame.h" },
#     { PigeonIMU_StickyFaults = "ctre/phoenix/sensors/PigeonIMU_StickyFaults.h" },
#     { SensorInitializationStrategy = "ctre/phoenix/sensors/SensorInitializationStrategy.h" },
#     { SensorTimeBase = "ctre/phoenix/sensors/SensorTimeBase.h" },
#     { SensorVelocityMeasPeriod = "ctre/phoenix/sensors/SensorVelocityMeasPeriod.h" },

#     # ctre/phoenix/unmanaged
#     { Unmanaged = "ctre/phoenix/unmanaged/Unmanaged.h" },
# ]

# generation_data = "gen"

# [tool.robotpy-build.wrappers."ctre_diagnostics".maven_lib_download]
# artifact_id = "diagnostics"
# group_id = "com.ctre.phoenix"
# repo_url = "http://devsite.ctr-electronics.com/maven/release"
# version = "5.17.4"
# libs = ["CTRE_PhoenixDiagnostics"]

# [tool.robotpy-build.wrappers."ctre_diagnostics"]
# name = "ctre_diagnostics"

# generation_data = "gen"

# [tool.robotpy-build.wrappers."ctre_canutils".maven_lib_download]
# artifact_id = "canutils"
# group_id = "com.ctre.phoenix"
# repo_url = "http://devsite.ctr-electronics.com/maven/release"
# version = "5.17.4"
# libs = ["CTRE_PhoenixCanutils"]

# [tool.robotpy-build.wrappers."ctre_canutils"]
# name = "ctre_canutils"

# generation_data = "gen"

# [tool.robotpy-build.wrappers."ctre_platform".maven_lib_download]
# artifact_id = "platform-stub"
# group_id = "com.ctre.phoenix"
# repo_url = "http://devsite.ctr-electronics.com/maven/release"
# version = "5.17.4"
# libs = ["CTRE_PhoenixPlatform"]

# [tool.robotpy-build.wrappers."ctre_platform"]
# name = "ctre_platform"

# generation_data = "gen"

# [tool.robotpy-build.wrappers."ctre_core".maven_lib_download]
# artifact_id = "core"
# group_id = "com.ctre.phoenix"
# repo_url = "http://devsite.ctr-electronics.com/maven/release"
# version = "5.17.4"
# libs = ["CTRE_PhoenixCore"]

# [tool.robotpy-build.wrappers."ctre_core"]
# name = "ctre_core"

# generate = [
#     # ctre/phoenix
#     { ErrorCode = "ctre/phoenix/ErrorCode.h" },

#     # ctre/phoenix/cci
#     { CCI = "ctre/phoenix/cci/CCI.h" },

#     # ctre/phoenix/platform
#     { Platform-pack = "ctre/phoenix/platform/Platform-pack.h" },
#     { Platform = "ctre/phoenix/platform/Platform.h" },

#     # ctre/phoenix/runtime
#     { LibLoader = "ctre/phoenix/runtime/LibLoader.h" },

#     # ctre/phoenix/string_util
#     { string_util = "ctre/phoenix/string_util/string_util.h" },
# ]

# generation_data = "gen"

[tool.robotpy-build.metadata]
name = "robotpy-ctre"
description = "Binary wrappers for the CTRE phoenix library"
author = "RobotPy Development Team"
author_email = "robotpy@googlegroups.com"
url = "https://github.com/robotpy/robotpy-ctre"
license = "BSD-3-Clause"
install_requires = [
    "robotpy-wpiutil>=2020.1.2.1,<2021.0.0"
]